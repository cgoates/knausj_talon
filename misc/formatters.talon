#provide both anchored and unachored commands via 'over'
phrase <user.text>$: user.insert_with_history(text)
phrase <user.text> over: user.insert_with_history(text)
{user.prose_formatter} <user.prose>$: user.insert_formatted(prose, prose_formatter)
{user.prose_formatter} <user.prose> over: user.insert_formatted(prose, prose_formatter)
{user.prose_formatter} <user.prose> auger:
    user.insert_formatted(prose, prose_formatter)
    insert("()")
{user.prose_formatter} <user.prose> args:
    user.insert_formatted(prose, prose_formatter)
    user.insert_between("(",")")
<user.format_text>+$: user.insert_many(format_text_list)
<user.format_text>+ over: user.insert_many(format_text_list)
<user.format_text>+ auger:
    user.insert_many(format_text_list)
    insert("()")
<user.format_text>+ args:
    user.insert_many(format_text_list)
    user.insert_between("(",")")
<user.formatters> that: user.formatters_reformat_selection(user.formatters)
word <user.word>: user.insert_with_history(user.word)
#{user.prose_formatter} word <user.word>: user.insert_formatted(user.word, prose_formatter)
cap word <user.word>: user.insert_formatted(user.word, "title")
yell word <user.word>: user.insert_formatted(user.word, "all cap")
recent list: user.toggle_phrase_history()
recent close: user.phrase_history_hide()
recent repeat <number_small>: user.insert_with_history(user.get_recent_phrase(number_small))
recent copy <number_small>: clip.set_text(user.get_recent_phrase(number_small))
select that: user.select_last_phrase()
before that: user.before_last_phrase()
nope that | scratch that: user.clear_last_phrase()
nope that was <user.formatters>: user.formatters_reformat_last(formatters)
dictate <user.prose>$: user.dictation_insert(prose)
